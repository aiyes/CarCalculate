    var app = angular.module('myApp', ['ui.bootstrap']);
    app.directive('orz',function(){
        return function(scope, element, attrs,ngModel) {
            element.datetimepicker({
                minView: "month",
                format: "yyyy-mm-dd",
                language: 'zh-CN',
                autoclose:true,
                onSelect:function (dateText, inst) {
//                console.log(dateText);
                    ngModel.$setViewValue(dateText);

                    scope.$apply();
                }
            });
        }
    })
    app.controller('myController', function ($scope, $http,$modal,$log) {

        $scope.isInputchange = false;
        $scope.personCert = [{Id:'01',name:'身份证'},{Id:'02',name:'护照'},
            {Id:'03',name:'军人证'},{Id:'04',name:'港澳通行证'},
            {Id:'05',name:'驾驶证'},{Id:'06',name:'港澳回乡证或台胞证'},
            {Id:'99',name:'其他'}];
//        $scope.mainInfo.insuredList[1].identifyType='01';
        // 初始化下拉框数据
        $scope.cusRadio = function(e) {
            if (e == 1) {
                $scope.personCert = [{Id:'01',name:'身份证'},{Id:'02',name:'护照'},
                    {Id:'03',name:'军人证'},{Id:'04',name:'港澳通行证'},
                    {Id:'05',name:'驾驶证'},{Id:'06',name:'港澳回乡证或台胞证'},
                    {Id:'99',name:'其他'}];
            } else {
                $scope.personCert = [{Id:'07',name:'组织机构代码证'}];
            }
        };

        //$scope.groupCert =
        //主要信息
        $scope.mainInfo = {
            "insuredList": [{
                "insuredName": "",
                "insuredType": "1",
                "identifyType": "01",
                "identifyNumber": "",
                "mobile": "",
                "sex": "1",
                "email": "",
                "postCode": "",
                "addressName": "",
                "linkerName": "",
                "customerCName": ""
            },{
                "insuredName": "",
                "insuredType": "1",
                "identifyType": "01",
                "identifyNumber": "",
                "mobile": "",
                "sex": "1",
                "email": "",
                "postCode": "",
                "addressName": "",
                "linkerName": "",
                "customerCName": ""
            }]
        };

        // 时间
        /* var bzStartDateChange = function (){
         alert(1);
         var datetime = $("#insuranceDeadline").find("input[name='bzStartDate']").val();
         alert(datetime);
         $scope.mainInfo.main.bzStartDate =datetime;
         }; */

//        $scope.mainInfo.insuredList[1].identifyType='02';
        /**
         * 险别列表，报价模块
         */
        $scope.mainInfo.combosList = [];
//        $scope.mainInfo.combosList[0].itemKindList[0].amount="";
        $scope.mainInfo.combosList[0] = {
            "itemKindList": [{
                "KindCode": "",
                "amount": "",
                "m1Value": "",
                "deductableFlag": "",
                "rateFactor": "",
                "benchMarkPremium": "",
                "premium":""
            }]
        };
//日期
        var d=new Date();
        var year=d.getFullYear();
        var month=d.getMonth()+1;
        if (month<10){
            month="0" + month;
        };
        var day=d.getDate();
        var today=year + "-" + month + "-" + day;

        d.setYear(year+1);
        d.setDate(day-1);
        var nextYear = d.getFullYear();
        var nextMonth=d.getMonth()+1;
        if (nextMonth<10){
            nextMonth="0" + nextMonth;
        };
        var nextDay=d.getDate();
        var nextYearDate=nextYear + "-" + nextMonth + "-" + nextDay;

        $scope.mainInfo.main={
            "startDate":today,
            "endDate":nextYearDate,
            "bzStartDate":today,
            "bzEndDate":nextYearDate
        }
        //标记是否选中对应险种
        $scope.kind = [];

        $scope.carDeviceList=[
                {"deviceName":"","actualValue":""},
                {"deviceName":"","actualValue":""},
                {"deviceName":"","actualValue":""},
                {"deviceName":"","actualValue":""}
            ]


        $scope.temp = [];
        $scope.temp[0] = {
            "itemKindList": [{
                "kindCode": "",
                "amount": "",
                "m1Value": "",
                "deductableFlag": "",
                "rateFactor": ""


            }]
        };
        $scope.temp[1] = {
            "itemKindList": [{
                "kindCode": "",
                "amount": "",
                "m1Value": "",
                "deductableFlag": "",
                "rateFactor": ""


            }]
        };
//返回险种信息
        $scope.combosData={};

        //基本险种
        $scope.temp[0].itemKindList = [
            {"kindCode": "001", "kindName": "机动车损失保险", "deductableFlag": "0"},
            {"kindCode": "002", "kindName": "机动车第三者责任保险", "deductableFlag": "0"},
            {"kindCode": "007", "kindName": "机动车全车盗抢保险", "deductableFlag": "0"},
            {"kindCode": "003", "kindName": "机动车车上人员责任保险（司机）", "deductableFlag": "0"},
            {"kindCode": "006", "kindName": "机动车车上人员责任保险（乘客）", "deductableFlag": "0"},
            {"kindCode": "205", "kindName": "机动车划痕损失险", "deductableFlag": "0"},
            {"kindCode": "201", "kindName": "玻璃单独破碎险", "deductableFlag": "0"},
            {"kindCode": "202", "kindName": "自燃损失险", "deductableFlag": "0"},
            {"kindCode": "206", "kindName": "发动机涉水损失险", "deductableFlag": "0"},
            {"kindCode": "210", "kindName": "机动车损失保险无法找到第三方特约险", "deductableFlag": "0"},
            {"kindCode": "211", "kindName": "指定修理厂险", "deductableFlag": "0"},
            {"kindCode": "203", "kindName": "新增设备损失保险", "deductableFlag": "0"},
            {"kindCode": "208", "kindName": "车上货物责任险", "deductableFlag": "0"},
            {"kindCode": "215", "kindName": "精神损害抚慰金责任险", "deductableFlag": "0"},
            {"kindCode": "207", "kindName": "修理期间费用补偿险", "deductableFlag": "0"}

        ];


        //不计免赔险种
        $scope.temp[1].itemKindList = [
            {"kindCode": "301", "kindName": "不计免赔率险（机动车损失保险）", "deductableFlag": "0"},
            {"kindCode": "302", "kindName": "不计免赔率险（第三者责任保险）", "deductableFlag": "0"},
            {"kindCode": "306", "kindName": "不计免赔率险（全车盗抢保险）", "deductableFlag": "0"},
            {"kindCode": "303", "kindName": "不计免赔率险（机动车车上人员责任保险（司机））", "deductableFlag": "0"},
            {"kindCode": "305", "kindName": "不计免赔率险（机动车车上人员责任保险（乘客））", "deductableFlag": "0"},
            {"kindCode": "309", "kindName": "不计免赔率险（车身划痕损失险）", "deductableFlag": "0"},
            null,
            {"kindCode": "307", "kindName": "不计免赔率险（自燃损失险）", "deductableFlag": "0"},
            {"kindCode": "310", "kindName": "不计免赔率险（发动机涉水损失险）", "deductableFlag": "0"},
            null,
            null,
            {"kindCode": "308", "kindName": "不计免赔率险（新增设备损失保险）", "deductableFlag": "0"},
            {"kindCode": "311", "kindName": "不计免赔率险（车上货物责任险）", "deductableFlag": "0"},
            {"kindCode": "315", "kindName": "不计免赔率险（精神损害抚慰金责任险）", "deductableFlag": "0"},
            null
        ];

//       alert(JSON.stringify(all));

        $scope.mainInfo.carInfo = {
            "newCarFlag": "0",
            "carPriceType":"1"
        };



        $scope.selected = [];
        $scope.checkVal = function (){
            if($scope.quicklyQuery.$invalid) {
                //sys.alert('未录入检索条件');
                swal("","未录入检索条件","warning");
                return false;
            }
            return true;
        };
//        设置不计免赔
        $scope.setDeductable=function(i){
            if($scope.kind[i]==1){
                $scope.temp[0].itemKindList[i].deductableFlag=1;
            }
            if($scope.kind[i]==0){
                $scope.temp[0].itemKindList[i].deductableFlag=0;
            }
        }
//        新增设备
        $scope.addDevice=function(){

            var modalInstance = $modal.open({
                templateUrl : 'addDevice.html',  //指向上面创建的视图
                controller : 'ModalDeviceCtrl',// 初始化模态范围
                size : 16, //大小配置
                resolve : {
                    carDeviceList : function(){
                        return $scope.carDeviceList;
                    }
                }
            });
            modalInstance.result.then(function(selectedItem) {
                $scope.carDeviceList = selectedItem;
            }, function() {
                $log.info('Modal dismissed at: ' + new Date());
            });

        }
        //历史数据复用
        $scope.query = function(size){
            if(!$scope.checkVal()){
                return;
            } else {
                if(!quicklyQueryValidate.form()) {
                    return;
                }
            }
//             alert(JSON.stringify($scope.licenseNo));
            var quickInfo=JSON.stringify($scope.quick);

            $http.post('car/getCarPolicyInfo/02',quickInfo)
                    .success(function(data,status){
//                          alert(status);
                        $scope.items = data;
                        //打开模态
                        var modalInstance = $modal.open({
                            templateUrl : 'myModelContent.html',  //指向上面创建的视图
                            controller : 'ModalInstanceCtrl',// 初始化模态范围
                            size : size, //大小配置
                            resolve : {
                                items : function(){
                                    return $scope.items;
                                }
                            }
                        })
                        modalInstance.result.then(function(selectedItem){
                            $scope.selected = selectedItem;


                            $scope.policy={};
//                                根据选中的保单险种类别设置不同的字段值
                            if(JSON.stringify($scope.selected.riskCode)=='0507'){

                            }
                            else{
                                $scope.policy={
                                    "policyNo":$scope.selected.policyNo,
                                    "startDate":$scope.selected.startDate,
                                    "endDate":$scope.selected.endDate,
                                    "relationFlag":"2",
                                    "TmkFlag":"1"
                                };
                            }
                            $.LoaderMask.loading({title:"加载中...",isFlag:true});

                            $http.post('car/policyReuse/03',$scope.policy)
                                    .success(function(data,status){

//                                         设置投保人信息
                                        $scope.mainInfo.applicant=data.applicantEhm;
//                                         设置车辆信息
                                        $scope.mainInfo.carInfo=data.carInfoEhm;
                                        $scope.carInfoList=[
                                            {
                                                "platModelCode":data.carInfoEhm.platmodelcode,
                                                "platModelName":data.carInfoEhm.platmodelname,
                                                "rBCode":data.carInfoEhm.rbCode,
                                                "marketDate":data.carInfoEhm.marketDate,
                                                "purchasePrice":data.carInfoEhm.purchasePrice,
                                                "actualValue":data.carInfoEhm.actualValue,
                                                "seatCount":data.carInfoEhm.seatCount,
                                                "vehicleTonnage":data.carInfoEhm.tonCount,
                                                "vehicleWeight":data.carInfoEhm.completeKerbMass,
                                                "exhaustCapacity":data.carInfoEhm.exhaustScale
                                            }
                                        ]
                                        $scope.carInfo= $scope.carInfoList[0];
//                                         $scope.carInfo={
//                                             "platModelCode":data.carInfoEhm.platmodelcode,
//                                             "platModelName":data.carInfoEhm.platmodelname,
//                                             "rBCode":data.carInfoEhm.rbCode,
//                                             "marketDate":data.carInfoEhm.marketDate,
//                                             "purchasePrice":data.carInfoEhm.purchasePrice
//                                         }
//                                         设置主信息
                                        $scope.mainInfo.main=data.mainEhm;
//                                         设置被保险人和车主信息
                                        var insuredArr=data.insuredDataEhmArr;
                                        if(insuredArr[0].insuredFlag=='5'){
                                            $scope.mainInfo.insuredList[0]=insuredArr[0];
                                            $scope.mainInfo.insuredList[0].insuredType=insuredArr[0].insuredNature;
                                            $scope.mainInfo.insuredList[1]=insuredArr[1];
                                        }
                                        else{
                                            $scope.mainInfo.insuredList[0]=insuredArr[1];
                                            $scope.mainInfo.insuredList[1]=insuredArr[0];
                                            $scope.mainInfo.insuredList[0].insuredType=insuredArr[1].insuredNature;
                                        }
                                        var itemKindDataEhmArr=data.itemKindDataEhmArr;
//                                         $scope.combosData.sumPremium= data.mainEhm.sumPremium;
                                        var all=$scope.temp[0].itemKindList;
                                        for(var i=0;i<itemKindDataEhmArr.length;i++){
                                            var itemKind=itemKindDataEhmArr[i];
                                            for(var j=0;j<all.length;j++){
                                                if(itemKind.kindCode==all[j].kindCode){
                                                    $scope.kind[j]=1;
                                                    if(itemKind.deductableFlag=='1'){
                                                        all[j].deductableFlag=1;
                                                    }
//                                                     all[j].premium=itemKind.premium;
//                                                     all[j].benchMarkPremium=itemKind.benchMarkPremium;
//                                                     all[j].discount=itemKind.discount;
//                                                     break;
                                                }

                                            }
                                        }
                                        $.LoaderMask.loading({title:"加载中...",isFlag:false});
                                    })
                                    .error(function(data,status){
                                        $.LoaderMask.loading({title:"加载中...",isFlag:false});
                                        //sys.error("系统出错，请联系系统管理员");
                                        // alert("系统出错，请联系系统管理员");
                                        swal("系统提示","系统出错，请联系系统管理员","error");
//                                         alert(status);
                                    })


                        },function(){

                            $log.info('Modal dismissed at: ' + new Date())
                        })
                    })
                    .error(function(data,status){
                        //sys.error("系统出错，请联系系统管理员");
                        // alert("系统出错，请联系系统管理员");
                        swal("系统提示","系统出错，请联系系统管理员","error");
                    });

//            $scope.items = ['8050120164039900001','8050120164039900001','8050120164039900001'];

        };
        //车损险的参考实际价值等于平台返回的车辆实际价值
        $scope.changeAmount = function () {
            if($scope.mainInfo.carInfo.carPriceType==2){
                $scope.temp[0].itemKindList[0].amount=$scope.mainInfo.carInfo.fairMarketValue;
                $scope.temp[0].itemKindList[2].amount=$scope.mainInfo.carInfo.fairMarketValue;
            }
            if($scope.mainInfo.carInfo.carPriceType==1){
                $scope.temp[0].itemKindList[0].amount=$scope.carInfo.actualValue;
                $scope.temp[0].itemKindList[2].amount=$scope.carInfo.actualValue;
            }

        };

        /*        $scope.change=function(carInfo){

         $scope.temp[0].itemKindList[0].amount = carInfo.actualValue;
         $scope.temp[0].itemKindList[2].amount=carInfo.actualValue;

         }; */
        $scope.myclick = function(){
//            alert($scope.temp[0].itemKindList[4].amount);
        }

//        监听商业险和交强险日期变化
        $scope.$watch("mainInfo.main.startDate", function(newValue, oldValue) {
            if(newValue!=null){
                var date=new Date(newValue);
                date.setYear(date.getFullYear()+1);
                date.setDate(date.getDate()-1);
                var year=date.getFullYear();
                var month=date.getMonth()+1;
                if (month<10){
                    month="0" + month;
                };
                var day=date.getDate();
                var nextDate=year + "-" + month + "-" + day;
                $scope.mainInfo.main.endDate=nextDate;
            }


        });
        $scope.$watch("mainInfo.main.bzStartDate", function(newValue, oldValue) {
            if(newValue!=null){
                var date=new Date(newValue);
                date.setYear(date.getFullYear()+1);
                date.setDate(date.getDate()-1);
                var year=date.getFullYear();
                var month=date.getMonth()+1;
                if (month<10){
                    month="0" + month;
                };
                var day=date.getDate();
                var nextDate=year + "-" + month + "-" + day;
                $scope.mainInfo.main.bzEndDate=nextDate;
            }

        });
        //监听车辆实际价值 carInfo.actualValue
        $scope.$watch("carInfo.actualValue",function(newValue, oldValue){
            if(!($scope.carInfo===undefined)){
                $scope.temp[0].itemKindList[0].amount =$scope.carInfo.actualValue;

            }
        })
//        监听参考实际价值
        $scope.$watch("temp[0].itemKindList[0].amount",function(newValue, oldValue){
            if(!($scope.temp[0].itemKindList[0].amount===undefined)){
                $scope.temp[0].itemKindList[2].amount=$scope.temp[0].itemKindList[0].amount;
                $scope.temp[0].itemKindList[7].amount=$scope.temp[0].itemKindList[0].amount;
            }
        })
//        计算新增设备保额
        $scope.calPrice = function () {
            $scope.temp[0].itemKindList[11].amount=0;

            for(var i=0;i<$scope.carDeviceList.length;i++){
                if($scope.carDeviceList[i].actualValue!=""||$scope.carDeviceList[i].actualValue!=null){
                    $scope.temp[0].itemKindList[11].amount=$scope.carDeviceList[i].actualValue+$scope.temp[0].itemKindList[11].amount;
                }
            }
            return $scope.temp[0].itemKindList[11].amount;
        };
//        三者责任险大于100万是，计算赔偿限额
        $scope.setThirdAmount=function(thirdAmount){
              $scope.temp[0].itemKindList[1].amount=thirdAmount*10000+"";

        }
//        下拉框设置
        $scope.setInputSelect=function(i){
            if(i==3){
                if(!($scope.inputSelect===undefined)){
                    $scope.temp[0].itemKindList[3].amount=$scope.inputSelect;
                }

            }
            if(i==4){
                if(!($scope.inputUnitAmount===undefined)){
                    $scope.temp[0].itemKindList[4].unitAmount=$scope.inputUnitAmount;
                }

            }
        }
//        被保险人查询
        $scope.insuredQuery = function () {
//            $scope.mainInfo.insuredList[0].customerCName=$scope.mainInfo.insuredList[0].insuredName;
//            $scope.mainInfo.insuredList[0].customerType=$scope.mainInfo.insuredList[0].insuredType;
            var customerInfo = {
                "customerCName": $scope.mainInfo.insuredList[1].insuredName,
                "customerType": $scope.mainInfo.insuredList[1].insuredType,
                "identifyType": $scope.mainInfo.insuredList[1].identifyType,
                "identifyNumber": $scope.mainInfo.insuredList[1].identifyNumber,
                "idvSex": $scope.mainInfo.insuredList[1].sex
            }
//            alert(JSON.stringify(customerInfo));
//           var datas= JSON.stringify($scope.mainInfo.insuredList[0]);
//           /car/getCustomerInfo/{id}
            $http.post('car/getCustomerInfo/07', customerInfo)
                    .success(function (data, status) {

                        var customerInfo = data;
                        $scope.mainInfo.insuredList[1] = {
                            "insuredName": customerInfo.customerCName,
                            "insuredType": customerInfo.customerType,
                            "identifyType": customerInfo.identifyType,
                            "identifyNumber": customerInfo.identifyNumber,
                            "sex": customerInfo.sex,
                            "insuredCode": customerInfo.customerCode,
                            "mobile":customerInfo.mobile,
                            "birthDay":customerInfo.birthDate,
                            "insuredType":"1"
                        }



                    })
                    .error(function (data, status) {

//                        alert(status);
//                        alert(data);
                    });

        };
        // 检查是否输入
        $scope.checkSaveAndQuotePara = function ($scope){
            var autoScope = $scope;
            if(!autoScope.insuredForm.$valid) {
                //sys.alert('被保人信息校验不通过');
                swal("系统提示","被保人信息校验不通过","warning");
                return false;
            }
            if(!autoScope.ownerForm.$valid) {
                //sys.alert('行驶证车主信息校验不通过');
                swal("系统提示","行驶证车主信息校验不通过","warning");
                return false;
            }
            if(!autoScope.insuranceDeadline.$valid) {
                //sys.alert('保险期限信息校验不通过');
                swal("系统提示","保险期限信息校验不通过","warning");
                return false;
            }
            if(!autoScope.carForm.$valid) {
                //sys.alert('行车辆信息校验不通过');
                swal("系统提示","车辆信息校验不通过","warning");
                return false;
            }
            if(autoScope.jqx==0 && !autoScope.checkProtection.$valid) {
                //sys.alert('交强险信息校验不通过');
                swal("系统提示","交强险信息校验不通过","warning");
                return false;
            }
            if(autoScope.syx==0 && !autoScope.checkProtection.$valid) {
                //sys.alert('商业险信息校验不通过');
                swal("系统提示","商业险信息校验不通过","warning");
                return false;
            }
            return true;
        };
        //保费计算
        $scope.baojia = function () {
        	$scope.checkSaveAndQuotePara($scope);
            /* if(!$scope.checkSaveAndQuotePara($scope)) {
                return;
            } */
            if(!insuredFormValidate.form()) {
            	return;
            }
            if(!ownerFormValidate.form()) {
            	return;
            }
            if(!insuranceDeadlineValidate.form()) {
            	return;
            }
            if(!carFormValidate.form()) {
            	return;
            }
            $.LoaderMask.loading({title:"保费计算中...",isFlag:true});
            $scope.selected = [];
            //设置商业险交强险日期
            /*  $sope.mainInfo.main={
             "bzStartDate":function(){return $("#bzStartDate").val()},
             "bzEndDate":function(){return $("#bzEndDate").val()},
             "startDate":function(){return $("#startDate").val()},
             "endDate":function(){return $("#endDate").val()}
             } */
            $scope.mainInfo.combosList[0] = {
                "itemKindList": [{
                    "kindCode": "",
                    "amount": "",
                    "m1Value": "",
                    "deductableFlag": "",
                    "rateFactor": "",
                    "benchMarkPremium": ""

                }]
            };
            //存储商业险险别列表
            //处理商业险险别列表
            $scope.temp[0].itemKindList[4].quantity=$scope.carInfo.seatCount-1;
            $scope.temp[0].itemKindList[4].amount=$scope.temp[0].itemKindList[4].quantity*$scope.temp[0].itemKindList[4].unitAmount;
            $scope.temp[0].itemKindList[10].rate=$scope.repairRate/100;
            for(var flag = 0;flag<$scope.temp[0].itemKindList.length;flag=flag+1){
                if($scope.kind[flag]=="1"){
                    $scope.selected.push($scope.temp[0].itemKindList[flag]);
                    if($scope.temp[0].itemKindList[flag].deductableFlag=="1"){
                        $scope.temp[1].itemKindList[flag].amount="0";
                        $scope.selected.push($scope.temp[1].itemKindList[flag]);
                    }

                }
            }
//            $scope.mainInfo.combosList[0].itemKindList = $scope.selected;
//            设置被保险人 车主 信息
            $scope.mainInfo.insuredList[0].insuredNature="carOwner";
            if($scope.mainInfo.insuredList[1].insuredType=="1"){
                $scope.mainInfo.insuredList[1].insuredNature="3";
            }
            if($scope.mainInfo.insuredList[1].insuredType=="2"){
                $scope.mainInfo.insuredList[1].insuredNature="4";
            }

//            设置险种信息
            $scope.mainInfo.combosList[0].itemKindList = $scope.selected;

//            设置交强险信息
            if($scope.jqx=='1'){
//                设置交强险主信息
                $scope.mainInfo.combosList[1]={
                    "combosCode":"PACK000000",
                    "serialNo":"0",
                    "riskCode":"0507",
                    "comboNature":"3",
                    "itemKindList":[
                        {"riskcode":"0507","kindCode":"BZ","deductableFlag":"0",}

                    ]

                }
//                设置车船税信息
                $scope.mainInfo.carShipTaxInfo.taxFlag=$scope.carShipTaxInfo.taxFlag;
                $scope.mainInfo.carShipTaxInfo.taxPayerName=$scope.mainInfo.insuredList[1].insuredName;
                $scope.mainInfo.carShipTaxInfo.taxPayerCertiCode=$scope.mainInfo.insuredList[1].identifyNumber;
//                $scope.carShipTaxInfo={
//                    "taxFlag":"3M",
//                    "taxPayerName":"田伟",
//                    "taxPayerCertiType":"01",
//                    "taxPayerCertiCode":"420683198809066118",
//                    "relifReason":"M7",
//                    "deductionDueType":"E",
//                    "kTaxComCode":"2440304",
//                    "kTaxComName":"深圳市福田区地税局",
//                    "freeNo":"440300255489"
//                }

            }
            if($scope.jqx=='0'){
                $scope.mainInfo.combosList=[ $scope.mainInfo.combosList[0]];
            }

            var selectedArray=JSON.stringify($scope.selected);
//            将车型查询返回值绑定到车辆请求信息上
            $scope.mainInfo.carInfo.completeKerbMass = $scope.carInfo.vehicleWeight;
            $scope.mainInfo.carInfo.tonCount = $scope.carInfo.vehicleTonnage;
            $scope.mainInfo.carInfo.exhaustScale = $scope.carInfo.exhaustCapacity;
            $scope.mainInfo.carInfo.purchasePrice = $scope.carInfo.purchasePrice;
            $scope.mainInfo.carInfo.actualValue = $scope.carInfo.actualValue;
            $scope.mainInfo.carInfo.rbCode = $scope.carInfo.rBCode;
            $scope.mainInfo.carInfo.platmodelCode = $scope.carInfo.platModelCode;
            $scope.mainInfo.carInfo.platmodelname = $scope.carInfo.platModelName;
            $scope.mainInfo.carInfo.importFlag = $scope.carInfo.importFlag;
            $scope.mainInfo.carInfo.seatCount = $scope.carInfo.seatCount;

//            设置车辆车主信息
            $scope.mainInfo.carInfo.carOwner=$scope.mainInfo.insuredList[0].insuredName;
            $scope.mainInfo.carInfo.carOwnerNature=$scope.mainInfo.insuredList[0].insuredType;
            $scope.mainInfo.carInfo.carOwnerIdentifyType=$scope.mainInfo.insuredList[0].identifyType;
            $scope.mainInfo.carInfo.carOwnerIdentifyNumber=$scope.mainInfo.insuredList[0].identifyNumber;

//            var ss = JSON.stringify($scope.mainInfo.combosList[0].itemKindList);

//设置投保人信息
            $scope.mainInfo.applicant = {
                "insuredNature":$scope.mainInfo.insuredList[1].insuredNature,
                "insuredType": $scope.mainInfo.insuredList[1].insuredType,
                "identifyType": $scope.mainInfo.insuredList[1].identifyType,
                "identifyNumber": $scope.mainInfo.insuredList[1].identifyNumber,
                "appliName":  $scope.mainInfo.insuredList[1].insuredName
            };
//            设置新增设备信息
            if($scope.kind[11]==1){
                $scope.mainInfo.carDeviceList=$scope.carDeviceList;
            }
            var info = JSON.stringify($scope.mainInfo);
            $http.post('car/premiumCalculate/06', info)
                    .success(function (data, status) {
//                        $scope.mainInfo = data;
                        $scope.mainInfo.main=data.main;
                        $scope.mainInfo.main.proposalNo=data.main.sSproposalNo;
                        $scope.combosData=data.combosList[0];
                        var selected= $scope.selected;
                        var itemKindList=$scope.combosData.itemKindList;

                        for(var i=0;i<itemKindList.length;i++){
                            var itemKind=itemKindList[i];
                            for(var j=0;j<selected.length;j++){
                                if(selected[j].kindCode==itemKind.kindCode){
                                    selected[j].benchMarkPremium=itemKind.benchMarkPremium;
                                    selected[j].premium=itemKind.premium;
                                    selected[j].discount=itemKind.discount;
                                }
                            }
                        }
//                        设置车船税
//                        $scope.carShipTaxInfo=data.carShipTaxInfo;
//                    展示交强险信息
//                       //                   设置总保费
                        $scope.sumPremium=$scope.combosData.sumPremium;
                        if(data.combosList.length==2){
                            //                        设置车船税
                            $scope.mainInfo.carShipTaxInfo=data.carShipTaxInfo;
                            $scope.combosJQX=data.combosList[1];
                            if(!($scope.combosJQX.sumPremium===undefined)){
                                $scope.sumPremium=(parseFloat($scope.sumPremium)+parseFloat($scope.combosJQX.sumPremium)).toFixed(2);
                            }
                            if(!($scope.mainInfo.carShipTaxInfo.sumPayTax===undefined)){
                                $scope.sumPremium=(parseFloat($scope.sumPremium)+parseFloat($scope.mainInfo.carShipTaxInfo.sumPayTax)).toFixed(2);
                            }
                        }

                        //sys.ok("保费计算成功");	
                        //alert("保费计算成功");

                        $.LoaderMask.loading({title:"保费计算中...",isFlag:false});
//                        sweetAlert("保费计算成功");
                        swal("保费计算成功");

                    })
                    .error(function (data, status) {
                        $.LoaderMask.loading({title:"保费计算中...",isFlag:false});
//                        alert(status);
//                        alert(JSON.stringify(data.errorMessage))
                        //sys.error(JSON.stringify(data.errorMessage));
                        swal(JSON.stringify(data.errorMessage));

                    });

        };


//        是否同被保险人
        $scope.isSample = function (toInsured) {

            if (toInsured == "1") {
                $scope.mainInfo.carInfo.carInsureRelation="1";
                $scope.mainInfo.insuredList[0] = {
                    "insuredName": $scope.mainInfo.insuredList[1].insuredName,
//                    "insuredType": $scope.mainInfo.insuredList[1].insuredType,
                    "identifyType": $scope.mainInfo.insuredList[1].identifyType,
                    "identifyNumber": $scope.mainInfo.insuredList[1].identifyNumber,

                };
                if($scope.mainInfo.insuredList[1].insuredType=="1"){

                    $scope.mainInfo.insuredList[0].insuredType="7";
                }
            }
            else {
                $scope.mainInfo.insuredList[0] = {};
            }
        };
//        车型查询
        $scope.getVehicleModelQuery = function () {
			var _insurance_obj = $("#insuranceDeadline");
			var _car_obj = $("#carForm");
            if (_insurance_obj.find("input[name='startDate']").val() == "") {
            	_insurance_obj.find("input[name='startDate']").tooltip({ placement: 'bottom' });
            	_insurance_obj.find("input[name='startDate']").attr("data-original-title","商业险保险期限不能为空").css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
            	return;
            } else {
            	_insurance_obj.find("input[name='startDate']").attr("data-original-title","").css({'background-color': '','border-color':''});
            }
            if (_car_obj.find("select[name='carKindCode']").val() == "?") {
            	_car_obj.find("select[name='carKindCode']").tooltip({ placement: 'bottom' });
            	_car_obj.find("select[name='carKindCode']").attr("data-original-title","请选择车辆种类").css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
            	return;
            } else {
            	_car_obj.find("select[name='carKindCode']").attr("data-original-title","").css({'background-color': '','border-color':''});
            }
            if (_car_obj.find("select[name='useNatureCode']").val() == "?") {
            	_car_obj.find("select[name='useNatureCode']").tooltip({ placement: 'bottom' });
            	_car_obj.find("select[name='useNatureCode']").attr("data-original-title","请选择使用性质").css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
            	return;
            } else {
            	_car_obj.find("select[name='useNatureCode']").attr("data-original-title","").css({'background-color': '','border-color':''});
            }            
            if (_car_obj.find("input[name='enrollDate']").val() == "") {
            	_car_obj.find("input[name='enrollDate']").tooltip({ placement: 'bottom' });
            	_car_obj.find("input[name='enrollDate']").attr("data-original-title","初次登记日期不能为空").css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
            	return;
            } else {
            	_car_obj.find("input[name='enrollDate']").attr("data-original-title","").css({'background-color': '','border-color':''});
            }
            if (_car_obj.find("input[name='carModel']").val() == "") {
            	_car_obj.find("input[name='carModel']").tooltip({ placement: 'bottom' });
            	_car_obj.find("input[name='carModel']").attr("data-original-title","厂牌型号不能为空").css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
            	return;
            } else {
            	_car_obj.find("input[name='carModel']").attr("data-original-title","").css({'background-color': '','border-color':''});
            }            

            $.LoaderMask.loading({title:"车型查询中...",isFlag:true});
            var carInfo={
                "busiStartDate":$scope.mainInfo.main.startDate,
                "carKindCode":$scope.mainInfo.carInfo.carKindCode,
                "newVehicleFlag":$scope.mainInfo.carInfo.newCarFlag,
                "brandName":$scope.mainInfo.carInfo.brandName,
                "useNatureCode":$scope.mainInfo.carInfo.useNatureCode,
                "enrollDate":$scope.mainInfo.carInfo.enrollDate

            };
            $http.post('car/getVehicleModelList/04', carInfo)
                    .success(function (data, status,header,config) {
                        $scope.carInfoList = data;

//                        alert(JSON.stringify($scope.carInfoList));
                        $.LoaderMask.loading({title:"车型查询中...",isFlag:false});

                    })
                    .error(function (data, status,header,config) {
                        $.LoaderMask.loading({title:"车型查询中...",isFlag:false});
//                        alert("车型查询失败，请明确车型名称")
//                        sweetAlert("车型查询失败，请明确车型名称");
                        // sys.error("车型查询失败，请明确车型名称");
                        //alert("车型查询失败，请明确车型名称");
                        swal("系统提示","车型查询失败，请明确车型名称","error");
//                         alert(header);
//                        alert(status);
                    });
        };

//test
        $scope.download=function(){
            $http({method:'GET', url:'/download/'+image[0]['_id']}).
                    success(function(data, status, headers, config) {
                        var element = angular.element('<a/>');
                        element.attr({
                            href: 'data:attachment/tif;charset=utf-8,' + encodeURI(data),
                            target: '_self',
                            download:'test.tif'
                        })[0].click();
                    }).
                    error(function(data, status, headers, config) {
                    });
        }

        //    生成pdf
        $scope.generatePDF=function(demandNo){
            var url='car/generatePDF/'+''+demandNo+'/08';
            //alert(url);
            $http.post(url,$scope.mainInfo)
                    .success(function(data,status){
                        var element = angular.element('<a/>');
                        element.attr({
                            href:'./download/'+demandNo,
                            target: '_self',
                            download:demandNo+'.pdf'
                        })[0].click();
                    })
                    .error(function(data,status){
                        //alert(error);
                    })
        }

    });



    angular.module('myApp').controller('ModalInstanceCtrl',function($scope,$modalInstance,items){ //依赖于modalInstance
        $scope.items = items;
        $scope.selected={};
//        $scope.selected = {
//            item : $scope.items[0]
//        };
        $scope.ok = function(){
            $modalInstance.close($scope.selected); //关闭并返回当前选项

        };
        $scope.cancel = function(){
            $modalInstance.dismiss('cancel'); // 退出
        }
    });

    angular.module('myApp').controller('ModalDeviceCtrl',function($scope,$modalInstance,carDeviceList){ //依赖于modalInstance
        $scope.carDeviceList = carDeviceList;
        $scope.selected={};
//        $scope.selected = {
//            item : $scope.items[0]
//        };
        $scope.grandTotal = function (carDeviceList) {
              var totalamount=0;
            for(var i=0;i<carDeviceList.length;i++){
                if(carDeviceList[i].actualValue!=""||carDeviceList[i].actualValue!=null){
                    totalamount=carDeviceList[i].actualValue+totalamount;
                }
            }
            return totalamount;
        };
        $scope.add = function(){
//            $modalInstance.close($scope.selected); //关闭并返回当前选项
            var device={
                "deviceName":"",
                "actualValue;":""
            }
            $scope.carDeviceList.push(device);

        };
        $scope.confirm = function(){
            var newCarDeviceList=[];
            for(var i=0;i<$scope.carDeviceList.length;i++){
                if($scope.carDeviceList[i].deviceName!=""&&$scope.carDeviceList[i].actualValue!=""){
                    newCarDeviceList.push($scope.carDeviceList[i]);
                }
            }
            $modalInstance.close(newCarDeviceList); //关闭并返回当前选项

        };
//        resert
        $scope.resert = function(){
            $scope.carDeviceList=[
                {"deviceName":"","actualValue":""},
                {"deviceName":"","actualValue":""},
                {"deviceName":"","actualValue":""},
                {"deviceName":"","actualValue":""}
            ]

        };
        $scope.cancel = function(){
            $modalInstance.dismiss('cancel'); // 退出
        }
    });

    // 表单验证
    var quicklyQueryValidate = $("form[name='quicklyQuery']").validate({
        rules:{
            licenseNo:{
                required:true,
                minlength: 6,
                maxlength: 11,

            }
        },
        errorClass: "help-inline",  //help-block
        errorElement: "span",
        highlight:function(element, errorClass, validClass) {
        	$( element ).tooltip({ placement: 'bottom' });
        	$( element ).css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
        },
        unhighlight: function(element, errorClass, validClass) {
        	$( element ).css({'background-color': '','border-color':''});
        },
        messages: {
            licenseNo: {required: "车牌号不能为空",
                minlength: "车牌号不能小于6位",
                maxlength: "车牌号不能超过11位"}
        }
    });
    //    车辆公允价值验证
    /* var fairMarketValueValidate = $("form[name='carForm']").validate({
        rules:{
            fairMarketValue:{

                min:function() {
                    return parseFloat($('#actualValue').val())*0.7;
                },
                max:function() {
                    return parseFloat($('#actualValue').val())*1.3;
                }

            }
        },
        errorClass: "help-inline",  //help-block
        errorElement: "span",
        highlight:function(element, errorClass, validClass) {
        	$( element ).tooltip({ placement: 'bottom' });
        	$( element ).css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
        },
        unhighlight: function(element, errorClass, validClass) {
        	$( element ).css({'background-color': '','border-color':''});
        },
        messages: {
            fairMarketValue: {
                min: "市场公允价值必须大于{0}！",
                max: "市场公允价值必须小于{0}！"}
        }
    }); */
    //    浮动系数 checkProtection  repairRate

    var fairMarketValueValidate = $("form[name='checkProtection']").validate({
        rules:{
            repairRate:{

                min:10,
                max:30
            },
            repairQuantity:{
                min:0,
                max:90
            },
            repairUnitAmount:{
                min:0,
                max:300
            }
        },
        errorClass: "help-inline",  //help-block
        errorElement: "span",
        highlight:function(element, errorClass, validClass) {
	        $( element ).tooltip({ placement: 'bottom' });
        	$( element ).css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
        },
        unhighlight: function(element, errorClass, validClass) {
        	$( element ).css({'background-color': '','border-color':''});
        },
        messages: {
            repairRate: {
                min: "浮动系数必须大于{0}！",
                max: "浮动系数必须小于{0}！"},
            repairQuantity: {
                min: "天数必须大于{0}！",
                max: "天数必须小于{0}！"},
            repairUnitAmount: {
                min: "金额必须大于{0}！",
                max: "金额必须小于{0}！"}
        }
    });
    var insuredFormValidate = $("form[name='insuredForm']").validate({
        rules:{
            insuredName:{
                required:true,
                rangelength:[2,40]
            },
            idCard:{
                required:true
            }
        },
        errorClass: "help-inline",  //help-block
        errorElement: "span",
        highlight:function(element, errorClass, validClass) {
	        $( element ).tooltip({ placement: 'bottom' });
        	$( element ).css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
        },
        unhighlight: function(element, errorClass, validClass) {
        	$( element ).css({'background-color': '','border-color':''});
        },
        messages: {
            insuredName: {required: "名称不能为空",
            	rangelength: "名称输入长度必须介于 2和 40 之间"},
            idCard: {required: "证件号不能为空"}
        }
    });

    var ownerFormValidate = $("form[name='ownerForm']").validate({
        rules:{
            username:{
                required:true,
                rangelength:[2,40]
            },
            idCard:{
                required:true
            }
        },
        errorClass: "help-inline",  //help-block
        errorElement: "span",
        highlight:function(element, errorClass, validClass) {
	        $( element ).tooltip({ placement: 'bottom' });
        	$( element ).css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
        },
        unhighlight: function(element, errorClass, validClass) {
        	$( element ).css({'background-color': '','border-color':''});
        },
        messages: {
            username: {required: "名称不能为空",
            	rangelength: "名称输入长度必须介于 2和 40 之间"},
            idCard: {required: "证件号不能为空"}
        }
    });
    
    var insuranceDeadlineValidate = $("form[name='insuranceDeadline']").validate({
        rules:{
        	bzStartDate:{
                required:true,
                date:true
            },
            bzEndDate:{
                required:true,
                date:true
            },
            startDate:{
                required:true,
                date:true
            },
            endDate:{
                required:true,
                date:true
            }
        },
        errorClass: "help-inline",  //help-block
        errorElement: "span",
        highlight:function(element, errorClass, validClass) {
	        $( element ).tooltip({ placement: 'bottom' });
        	$( element ).css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
        },
        unhighlight: function(element, errorClass, validClass) {
        	$( element ).css({'background-color': '','border-color':''});
        },
        messages: {
        	bzStartDate: {required: "名称不能为空",
        		date: "请输入正确格式的日期"},
            bzEndDate: {required: "证件号不能为空",
            	date: "请输入正确格式的日期"},
            startDate: {required: "证件号不能为空",
            	date: "请输入正确格式的日期"},
            endDate: {required: "证件号不能为空",
            	date: "请输入正确格式的日期"}
        }
    });    

    var carFormValidate = $("form[name='carForm']").validate({
        rules:{
           carKindCode:{
                required:true
            },useNatureCode:{
                required:true
            },enrollDate:{
                required:true
            },carModel:{
                required:true
            },licenseNo: {
            	required:true,
            	minlength: 6,
            	maxlength: 11
            },engineNo: {
            	required:true
            },frameNo: {
            	required:true,
            	rangelength:[11,17]
            },purchasePrice: {
            	required:true
            },actualValue: {
            	required:true
            },fairMarketValue: {
            	required:true
            },seatCount: {
            	required:true
            },vehicleTonnage: {
            	required:true
            },exhaustCapacity: {
            	required:true
            }
        },
        errorClass: "help-inline",  //help-block
        errorElement: "span",
        highlight:function(element, errorClass, validClass) {
	        $( element ).tooltip({ placement: 'bottom' });
        	$( element ).css({'background-color': '#FFED86','border-color':'rgba(236, 168, 82, 0.8)'});
        },
        unhighlight: function(element, errorClass, validClass) {
        	$( element ).css({'background-color': '','border-color':''});
        },
        messages: {
            carKindCode: {required: "车辆种类不能为空"},
            useNatureCode: {required: "使用性质不能为空"}, 
            enrollDate: {required: "初次登记日期不能为空"},
            carModel: {required: "厂牌型号不能为空"},
            licenseNo: {required: "车牌号不能为空",
                minlength: "车牌号不能小于6位",
                maxlength: "车牌号不能超过11位"},
            engineNo: {required: "发动机号不能为空"},    
            frameNo: {required: "车架号不能为空",
            	rangelength: "车架号只允许录入17位"},
            purchasePrice: {required: "新车购置价不能为空"},
            actualValue: {required: "车辆实际价值不能为空"},
            fairMarketValue: {required: "市场公允价值不能为空"},
            seatCount: {required: "核定座位数不能为空"},
            vehicleTonnage: {required: "核定载重量不能为空"},
            exhaustCapacity: {required: "排气量不能为空"}
        }
    });   