package com.chinalife.sz.carcalculate.service.impl;

import com.alibaba.fastjson.JSON;
import com.chinalife.sz.carcalculate.service.WebService;
import com.chinalife.sz.carcalculate.utils.ConfigUtils;
import com.chinalife.sz.carcalculate.webservice.VehicleModelQueryServiceV1XStub;
import com.chinalife.sz.cc.domain.TransResultEhm;
import org.apache.axis2.AxisFault;
import org.apache.axis2.client.Options;
import org.apache.axis2.transport.http.HTTPConstants;
import org.apache.log4j.Logger;

import java.lang.reflect.InvocationTargetException;

/**
 * Created by tianwei on 2016/7/31.
 * 车型计算
 */
public class VehicleModelQueryService implements WebService {
    private VehicleModelQueryServiceV1XStub stub;
    private Logger logger= Logger.getLogger(this.getClass());
    @Override
    public <T> boolean checkData(T object) {
        if (object instanceof VehicleModelQueryServiceV1XStub.VehicleModelQueryRequest) {
            VehicleModelQueryServiceV1XStub.VehicleModelQueryRequest request = (VehicleModelQueryServiceV1XStub.VehicleModelQueryRequest) object;
            request.setPolicySort("SZ0");
            request.setStandardName(request.getBrandName());
            request.setBrandName("");
            request.setComCode("4403861015");
            request.setTmkFlag("1");
            request.setRelationFlag("1");
            //request.setUseNatureCode("8A");
            request.setLocalModelQueryFlag("1");
            //request.setStandardName("捷达FV7160CiFE轿车");//GTM7201RB
            //request.setNewVehicleFlag("0");
            request.setBusinessNature("0");
            //request.setBusiStartDate();

            try {
                ConfigUtils.setRequest(stub, request);
//                request.getTXInsuranceRequestExtensionEhm().setOperatorKey("Gpic_EM");
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            } catch (InstantiationException e) {
                e.printStackTrace();
            } catch (InvocationTargetException e) {
                e.printStackTrace();
            }
            return true;
            //ConfigUtils.setProperties(request);
        }
        return false;
    }

    @Override
    public <T> T dealData(Object domain, T response) {

        VehicleModelQueryServiceV1XStub.VehicleModelQueryRequest request = new VehicleModelQueryServiceV1XStub.VehicleModelQueryRequest();
        request = ConfigUtils.simpleBeanConvert(domain, request.getClass());
        try {
            stub = new VehicleModelQueryServiceV1XStub();
        } catch (AxisFault e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
            return null;
        }

        //request.setre
        if (checkData(request)) {
            VehicleModelQueryServiceV1XStub.QueryCarModelList query = new VehicleModelQueryServiceV1XStub.QueryCarModelList();
            query.setRequest(request);
//            System.out.println(request.getBrandName()+"(request):"+ JSON.toJSONString(request));
            logger.info(request.getBrandName()+"(request):"+ JSON.toJSONString(request));
            try {
                int timeOutInMilliSeconds = 30000;
                Options options = stub._getServiceClient().getOptions();
                options.setTimeOutInMilliSeconds(timeOutInMilliSeconds);
                options.setProperty(HTTPConstants.SO_TIMEOUT, timeOutInMilliSeconds);
                options.setProperty(HTTPConstants.CONNECTION_TIMEOUT,timeOutInMilliSeconds);
                stub._getServiceClient().setOptions(options);
                VehicleModelQueryServiceV1XStub.VehicleModelQueryResponse VehicleModelQueryResponse = stub.queryCarModelList(query).get_return();
                VehicleModelQueryServiceV1XStub.TransResultEhm result = VehicleModelQueryResponse.getTXInsuranceResponseEhm().getTransResultEhm();

                if (result.getResultCode().equals("1")) {
                    VehicleModelQueryServiceV1XStub.VehicleModelData[] vehicleModelDataArr = VehicleModelQueryResponse.getVehicleModelDataArr();
                    vehicleModelDataArr = sortVehicleModelArr(vehicleModelDataArr);
                    VehicleModelQueryResponse.setVehicleModelDataArr(vehicleModelDataArr);
                    response = (T) ConfigUtils.simpleBeanConvert(VehicleModelQueryResponse, response.getClass());
                    TransResultEhm resultEhm = new TransResultEhm();
                    resultEhm = ConfigUtils.simpleBeanConvert(result, resultEhm.getClass());
                    ConfigUtils.setSingleProperties(response, resultEhm);
                    logger.info("车型查询返回值:"+JSON.toJSONString(VehicleModelQueryResponse));
                    return response;


                } else {
                    TransResultEhm resultEhm = new TransResultEhm();
                    resultEhm = ConfigUtils.simpleBeanConvert(result, resultEhm.getClass());
                    ConfigUtils.setSingleProperties(response, resultEhm);
                    return response;
                }
            } catch (Exception e) {
                e.printStackTrace();
                logger.error(e.getMessage(),e);
                return null;
            }
        }
        return null;
    }

    public VehicleModelQueryServiceV1XStub getStub() {
        return stub;
    }

    public void setStub(VehicleModelQueryServiceV1XStub stub) {
        this.stub = stub;
    }



    private VehicleModelQueryServiceV1XStub.VehicleModelData[] sortVehicleModelArr(VehicleModelQueryServiceV1XStub.VehicleModelData[] vehicleModelDataArr) {
        if (vehicleModelDataArr.length > 1) {
            for (int i = 0; i < vehicleModelDataArr.length - 1; i++) {
                for (int j = 0; j < vehicleModelDataArr.length-i - 1; j++) {
                    if (vehicleModelDataArr[i].getPurchasePrice() > vehicleModelDataArr[i + 1].getPurchasePrice()) {
                        VehicleModelQueryServiceV1XStub.VehicleModelData temp;
                        temp = vehicleModelDataArr[i];
                        vehicleModelDataArr[i] = vehicleModelDataArr[i + 1];
                        vehicleModelDataArr[i + 1] = temp;

                    }
                }

            }
            return vehicleModelDataArr;
        } else {
            return vehicleModelDataArr;
        }

    }
}
